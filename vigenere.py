# from main import convert_to_list # TODO remove when convert to list becomes an external thing

"""
Converts a string to a list
Input: a string
Output: the list of capitalized characters
        If the input has an unacceptable character, it will return None
"""
def convert_to_list(string):
    message = []
    for k in range(len(string)):
        if string[k] == " ":                                             # If the message is a space
            message.append(" ")
        elif ord(string[k]) > 96 and ord(string[k]) < 123:         # If the message is lower case 
            message.append(string[k].upper())
        elif ord(string[k]) > 64 and ord(string[k]) < 91:         # If the message is in upper case
            message.append(string[k])
        else:
            return None
    return message

""" 
This is the space handler function. 
This function handles the alphabet that is provided and takes care of spaces.

Input: a char
Output: the asci value of the char input
    
"""
def space_handler(char):
    if (char == ' '):
        return 26    
    else:
        return ord(char) - ord('A')

""" 
This is the vigenere encrypt function. 
This function takes in a message and a key and encrypts the message.

Input: message and key
Output: the encrypted message 
    
"""
def vigenere_encr(message, key):
    cipher_text = []
    length = len(message)
    key_length = len(key)
    message = convert_to_list(message)
    key = convert_to_list(key)
    n = 0

    for i in range(length):
        if n >= key_length:
            n = 0
        char = message[i]
        message_value = space_handler(char)
        key_value = space_handler(key[n]) 
        encrypyt_char = ((message_value + key_value) % 27) + 65
        # if (encrypt_char == " "):
            #TODO change this to return a string and not a list!!!!!
        cipher_text.append(chr(encrypyt_char))
        n+=1
    # cipher_text = string(cipher_text)
    return cipher_text

""" 
This is the reverse space function. 
This function takes in character and handles the ascii value that is generated by spaces.

Input: character
Output: the number ascii value
    
"""
def reverse_space(char):
    if (char == '['):
        return 91    
    else:
        return ord(char) - ord('A')

""" 
This is the vigenere decrypt function. 
This function takes in a message and a key and decrypts the message.

Input: message and key
Output: the decrypted message in a list form 
    
"""
def vigenere_decrypt(message, key):
    plain_text = []
    message = convert_to_list(message)
    key = convert_to_list(key)
    length = len(message)
    key_length = len(key)
    n = 0

    for i in range(length):
        if n >= key_length:
            n = 0
        char = message[i]
        message_val = reverse_space(char) #need to figure out how to deal with spaces
        key_value = reverse_space(key[n])
        decrypyt_char = ((message_val - key_value) % 27) + 65
        plain_text.append(chr(decrypyt_char))
        n+=1
    return plain_text
